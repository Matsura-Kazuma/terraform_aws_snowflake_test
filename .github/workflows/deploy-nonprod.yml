# このワークフローは 非本番(dev/stg)環境に Terraform を適用するための GitHub Actions です。
# OIDC で AWS に AssumeRole し、SOPS で秘密変数を復号、init → plan → apply を一連で実行します。
# 各ブロックの意味と安全運用のポイントを解説します。

name: Deploy NonProd（dev/stg）
on:
  # 手動実行専用
  workflow_dispatch:
    inputs:
      env:
        description: "Environment（dev/stg）"
        required: true
        type: choice
        options: [dev, stg]
      # Terraform スタックのパスを指定、stgとdevで使い分ける
      stack:
        description: "スタックパス（例: stacks/dev/ap-northeast-1/foundation）"
        required: true
        type: string
permissions:
  contents: read
  # OIDCでAWSにAssumeRole
  id-token: write
  # 環境(Deployments)のステータス更新
  deployments: write
# environment は Dev / Stg を自動切替
environment:
  name: ${{ inputs.env == 'dev' && 'Dev' || 'Stg' }}
# 同じ env×stack の同時実行を直列化します（進行中のジョブはキャンセルしない設定）。
concurrency:
  group: deploy-${{ inputs.env }}-${{ inputs.stack }}
  cancel-in-progress: false
jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: "1.8.5" }

      - name: AWS 認証
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.env == 'dev' && vars.AWS_DEV_APPLY_ROLE_ARN || vars.AWS_STG_APPLY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: SOPS 復号
        run: |
          echo "${{ secrets.SOPS_AGE_KEY }}" > /tmp/agekey.txt
          export SOPS_AGE_KEY_FILE=/tmp/agekey.txt
          if [ -f "${{ inputs.stack }}/secrets.enc.tfvars" ]; then
            sops -d "${{ inputs.stack }}/secrets.enc.tfvars" > "${{ inputs.stack }}/secrets.dec.tfvars"
          fi

      - name: Terraform Init
        run: terraform -chdir=${{ inputs.stack }} init -backend-config=${{ inputs.stack }}/backend.hcl

      - name: Terraform Plan（再確認）
        run: terraform -chdir=${{ inputs.stack }} plan -var-file=secrets.dec.tfvars -input=false -lock=true -out=tfplan.bin

      - name: Terraform Apply
        run: terraform -chdir=${{ inputs.stack }} apply -input=false -auto-approve tfplan.bin

      - name: 復号ファイル削除
        if: always()
        run: rm -f ${{ inputs.stack }}/secrets.dec.tfvars
